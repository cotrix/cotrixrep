package org.cotrix.lifecycle;

import java.io.Serializable;

/**
 * A factory of {@link Lifecycle}s.
 * 
 * @author Fabio Simeoni
 * 
 */
public interface LifecycleFactory extends Serializable {

	/**
	 * The name of the default lifecycle.
	 */
	public static final String DEFAULT = "__default__";

	/**
	 * Returns the name of lifecycle generated by this factory.
	 * 
	 * @return the name
	 */
	String name();

	/**
	 * Creates a lifecycle for a given resource.
	 * 
	 * @param id the resource identifier
	 * @return the lifecycle
	 * 
	 */
	Lifecycle create(String id);

	/**
	 * Creates a lifecycle in a given initial state for a given resource.
	 * 
	 * @param id the resource identifier
	 * @param startState the start state
	 * @return the lifecycle
	 * 
	 * @throws IllegalArgumentException if the inputs are null, or if the start state is invalid for this type of
	 *             lifecycle
	 */
	Lifecycle create(String id, State startState);

}
